@using LTS_Proto.Web.Data
@using System.Linq;
@using System.Security.Claims;

@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <AuthorizeView>
            <Authorized>
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item ml-auto">
                            <a class="btn btn-outline-primary" href="/UsrDet/@UsrId">@Nom</a>
                            <a class="btn btn-outline-secondary" href="/" @onclick="Logout">@L["Logout"]</a>
                    </li>
                </ul>
            </Authorized>
            <NotAuthorized>
                <a href="/">@L["Login"]</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code{
    string UsrId;
    string Nom;
    string Rol;

    protected override async Task OnInitializedAsync()
    {
        var lxUsrState = await ((UsrAuthenticationStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync();
        ClaimsPrincipal lxUsrIdentity = lxUsrState.User;

        Nom = lxUsrIdentity.Identity.Name;
        if (Nom != null)
        {
            Rol = lxUsrIdentity.FindFirst(ClaimTypes.Role).Value;
            UsrId = lxUsrIdentity.FindFirst(ClaimTypes.NameIdentifier).Value;
        }
    }

    public async Task Logout()
    {

        await ((UsrAuthenticationStateProvider)AuthenticationStateProvider).MarkUsrAsLoggedOut();
        NavMgr.NavigateTo("/");
    }
}